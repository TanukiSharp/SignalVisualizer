<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SignalVisualizer"
                    xmlns:vm="clr-namespace:SignalVisualizer.ViewModels">

    <local:ExceptionValueConverter x:Key="ExceptionValueConverter"/>

    <DataTemplate x:Key="DataSourceView" DataType="vm:DataSourceViewModel">
        <Border Margin="2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock x:Name="txtName" Foreground="Gray" Text="{Binding Name, Mode=OneTime}" Margin="1,1,6,1" VerticalAlignment="Center"/>
                    <StackPanel Orientation="Horizontal" Margin="1,1,6,1">
                        <TextBlock Text="(v" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding Version, Mode=OneTime}" VerticalAlignment="Center"/>
                        <TextBlock Text=")" VerticalAlignment="Center"/>
                    </StackPanel>
                </StackPanel>
                <Grid Grid.Column="1" Margin="1" MinWidth="40">
                    <Button x:Name="btnStart" Content="Start" HorizontalAlignment="Stretch" Padding="2" Command="{Binding StartCommand, Mode=OneTime}"/>
                    <Button x:Name="btnStop" Content="Stop" HorizontalAlignment="Stretch" Padding="2" Command="{Binding StopCommand, Mode=OneTime}" Visibility="Hidden"/>
                </Grid>
                <Button Grid.Column="2" Content="Configure" Margin="1" Padding="2" Command="{Binding ConfigureCommand, Mode=OneTime}"/>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsRunning, Mode=OneWay}" Value="True">
                <Setter TargetName="txtName" Property="Foreground" Value="Blue"/>
                <Setter TargetName="btnStart" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="btnStop" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsError, Mode=OneWay}" Value="True">
                <Setter TargetName="txtName" Property="Foreground" Value="Red"/>
                <Setter TargetName="txtName" Property="ToolTipService.ShowDuration" Value="999999999"/>
                <Setter TargetName="txtName" Property="ToolTipService.ToolTip">
                    <Setter.Value>
                        <TextBlock Text="{Binding Error, Mode=OneWay, Converter={StaticResource ExceptionValueConverter}}"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="DataSourceInstanceView" DataType="vm:DataSourceInstanceViewModel">
        
    </DataTemplate>
    
    <DataTemplate x:Key="SignalViewView" DataType="vm:SignalViewViewModel">
        <Border BorderThickness="1" BorderBrush="Gray" Margin="1">
            <Grid>
                <DockPanel x:Name="view" LastChildFill="True">
                    <ToggleButton x:Name="tglView" Content="Settings" Margin="1" VerticalAlignment="Bottom" Padding="2" DockPanel.Dock="Left">
                        <ToggleButton.LayoutTransform>
                            <RotateTransform Angle="-90"/>
                        </ToggleButton.LayoutTransform>
                    </ToggleButton>
                    <Popup IsOpen="{Binding ElementName=tglView, Path=IsChecked}" AllowsTransparency="True" StaysOpen="False">
                        <Border Padding="4" CornerRadius="3" BorderBrush="Gray" BorderThickness="1" Background="WhiteSmoke">
                            <StackPanel>
                                <Grid Focusable="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Column="0" Grid.Row="0" Text="Signal Samples:" VerticalAlignment="Center" Margin="2"/>
                                    <Slider Grid.Column="1" Grid.Row="0" Width="150" Margin="4"
                                                    Minimum="100" Maximum="1000" TickFrequency="100" TickPlacement="BottomRight" IsSnapToTickEnabled="True"
                                                    Value="{Binding SignalSampleCount, Delay=500}"/>
                                    <TextBlock Grid.Column="2" Grid.Row="0" Text="{Binding SignalSampleCount, Mode=OneWay}" Margin="2" VerticalAlignment="Center"/>

                                    <TextBlock Grid.Column="0" Grid.Row="1" Text="Time Scale:" VerticalAlignment="Center" Margin="2"/>
                                    <Slider Grid.Column="1" Grid.Row="2" Width="150" Margin="4"
                                                    Minimum="10" Maximum="500" TickFrequency="10" TickPlacement="BottomRight" IsSnapToTickEnabled="True"
                                                    Value="{Binding UnitsPerSecond}"/>
                                    <TextBlock Grid.Column="2" Grid.Row="1" Text="{Binding UnitsPerSecond, Mode=OneWay, StringFormat='f2'}" Margin="2" VerticalAlignment="Center"/>
                                </Grid>
                                <Separator/>
                                <Grid Focusable="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Column="0" Grid.Row="0" Text="Value Maximum Range:" VerticalAlignment="Center" Margin="2"/>
                                    <TextBox Grid.Column="1" Grid.Row="0" Width="100" Margin="4" VerticalAlignment="Center" Text="{Binding MaximumRange}"/>

                                    <TextBlock Grid.Column="0" Grid.Row="1" Text="Value Minimum Range:" VerticalAlignment="Center" Margin="2"/>
                                    <TextBox Grid.Column="1" Grid.Row="1" Width="100" Margin="4" VerticalAlignment="Center" Text="{Binding MinimumRange}"/>

                                    <TextBlock Grid.Column="0" Grid.Row="2" Text="Value Units per Tick:" VerticalAlignment="Center" Margin="2"/>
                                    <TextBox Grid.Column="1" Grid.Row="2" Width="100" Margin="4" Text="{Binding UnitsPerTick}" VerticalAlignment="Center"/>

                                </Grid>
                            </StackPanel>
                        </Border>
                    </Popup>
                    <DockPanel LastChildFill="True">
                        <local:ScaleBar x:Name="scalebar" DockPanel.Dock="Left" VerticalAlignment="Stretch" HorizontalAlignment="Center" Height="30" ClipToBounds="True"
                                        Background="WhiteSmoke"
                                        DecimalCountRounding="2" IsZoomingOnMouseWheel="False"
                                        UnitsPerTick="{Binding UnitsPerTick, Mode=OneWay}"
                                        PointsPerTick="{Binding PointsPerTick, Mode=OneWay}"
                                        StartUnit="{Binding MarginedMinimumRange, Mode=OneWay}">
                            <local:ScaleBar.LayoutTransform>
                                <RotateTransform Angle="-90"/>
                            </local:ScaleBar.LayoutTransform>
                        </local:ScaleBar>
                        <local:CurveRenderer x:Name="curveRenderer"
                                             Background="White"
                                             CurveData="{Binding RingBuffer, Mode=OneWay}"
                                             MinimumRange="{Binding MarginedMinimumRange, Mode=OneWay}"
                                             MaximumRange="{Binding MarginedMaximumRange, Mode=OneWay}"
                                             UnitsPerSecond="{Binding UnitsPerSecond, Mode=OneWay}"
                                             PointsPerTick="{Binding PointsPerTick, Mode=OneWay}"
                                             UnitPerValue="{Binding UnitsPerTick, Mode=OneWay}"
                                             HorizontalAlignment="Stretch">
                        </local:CurveRenderer>
                    </DockPanel>
                </DockPanel>
                <TextBox x:Name="error" Text="{Binding Error, Mode=OneWay, Converter={StaticResource ExceptionValueConverter}}" Background="#FFFFE0E0" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" IsReadOnly="True" Visibility="Collapsed"/>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsError, Mode=OneWay}" Value="True">
                <Setter TargetName="view" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="error" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="SignalViewSelectorView" DataType="vm:SignalViewSelectorViewModel">
        <Border CornerRadius="2" Background="Gray" Padding="4" Margin="1">
            <UniformGrid Columns="2">
                <DockPanel LastChildFill="True">
                    <TextBlock DockPanel.Dock="Left" Text="Data Sources" Foreground="WhiteSmoke">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="90"/>
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                    <ListBox x:Name="lstDataSources" ItemsSource="{Binding AvailableDataSources, Mode=OneTime}" SelectedItem="{Binding SelectedDataSource, Mode=TwoWay}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name, Mode=OneTime}" Margin="1"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
                <DockPanel LastChildFill="True">
                    <TextBlock DockPanel.Dock="Left" Text="Signal Views" Foreground="WhiteSmoke">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="90"/>
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                    <ListBox DataContext="{Binding SelectedDataSource, Mode=OneWay}" ItemsSource="{Binding Components, Mode=OneTime}" SelectedIndex="{Binding SelectedComponentIndex}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Mode=OneTime}" Margin="1"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </UniformGrid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="SignalFiltersPipelineView" DataType="vm:SignalFiltersPipelineViewModel">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ListBox Margin="1" Grid.Column="0" ItemsSource="{Binding AvailableSignalFilterFactories, Mode=OneTime}" SelectedItem="{Binding SelectedSignalFilterFactory}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding FilterName, Mode=OneTime}"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <StackPanel Grid.Column="1">
                <Button Width="24" Height="24" Margin="1" Content="+" VerticalAlignment="Center" Command="{Binding AddSelectedFilterCommand, Mode=OneTime}"/>
            </StackPanel>
            <ListBox Margin="1" Grid.Column="2" ItemsSource="{Binding SignalFilters, Mode=OneTime}" SelectedItem="{Binding SelectedSignalFilter}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name, Mode=OneTime}"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <StackPanel Grid.Column="3">
                <Button Width="24" Height="24" Content="Up" Margin="1" Command="{Binding SelectedSignalFilter.MoveUpCommand}" IsEnabled="{Binding SelectedSignalFilter.CanMoveUp, FallbackValue=false}"/>
                <Button Width="24" Height="24" Content="Dn" Margin="1" Command="{Binding SelectedSignalFilter.MoveDownCommand}" IsEnabled="{Binding SelectedSignalFilter.CanMoveDown, FallbackValue=false}"/>
                <Button Width="24" Height="24" Content="X" Margin="1" Command="{Binding RemoveSelectedFilterCommand, Mode=OneTime}"/>
                <Button Height="24" Content="Config." Margin="1" Padding="2,0,2,0" Command="{Binding ConfigureSelectedFilterCommand, Mode=OneTime}">
                    <Button.LayoutTransform>
                        <RotateTransform Angle="90"/>
                    </Button.LayoutTransform>
                </Button>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="SignalViewContainerView" DataType="vm:SignalViewContainerViewModel">
        <DockPanel LastChildFill="True" Margin="0,0,6,0">
            <DockPanel DockPanel.Dock="Top">
                <Grid DockPanel.Dock="Right" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="1">
                    <Button x:Name="btnAcceptView" Content="Accept" Command="{Binding AcceptViewCommand, Mode=OneTime}" IsEnabled="{Binding SignalViewSelector.IsValidable}" Visibility="Collapsed" Padding="2"/>
                    <Button x:Name="btnReturnToView" Content="Return to View" Command="{Binding ReturnToViewCommand, Mode=OneTime}" Visibility="Collapsed" Padding="2"/>
                    <Menu x:Name="mnuActions" Background="Transparent">
                        <MenuItem Header="Actions" BorderThickness="1" BorderBrush="Gray" Padding="8,4,8,4">
                            <MenuItem x:Name="mnuChangeView" Header="Change View" Command="{Binding ChangeViewCommand, Mode=OneTime}"/>
                            <MenuItem x:Name="mnuFilters" Header="Filters Pipeline" Command="{Binding FiltersCommand, Mode=OneTime}"/>
                            <Separator/>
                            <MenuItem Header="Remove View" Command="{Binding RemoveCommand, Mode=OneTime}"/>
                        </MenuItem>
                    </Menu>
                </Grid>
                <TextBlock DockPanel.Dock="Left" Text="{Binding SignalView.Name, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Left" ToolTipService.ToolTip="{Binding SignalView.Name, Mode=OneWay}"/>
            </DockPanel>
            <Grid Height="{x:Static vm:SignalViewViewModelBase.ViewHeight}">
                <ContentControl x:Name="SignalViewSelectorPane" Content="{Binding SignalViewSelector, Mode=OneTime}" ContentTemplate="{StaticResource SignalViewSelectorView}"/>
                <ContentControl x:Name="SignalViewPane" Content="{Binding SignalView, Mode=OneWay}" ContentTemplate="{StaticResource SignalViewView}" Visibility="Hidden"/>
                <ContentControl x:Name="FilterPipelinePane" Content="{Binding SignalFiltersPipeline, Mode=OneTime}" ContentTemplate="{StaticResource SignalFiltersPipelineView}" Visibility="Hidden"/>
            </Grid>
        </DockPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding CurrentPane, Mode=OneWay}" Value="SignalViewSelector">
                <Setter TargetName="mnuActions" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="btnAcceptView" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CurrentPane, Mode=OneWay}" Value="SignalView">
                <Setter TargetName="SignalViewPane" Property="Visibility" Value="Visible"/>
                <Setter TargetName="SignalViewSelectorPane" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="FilterPipelinePane" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CurrentPane, Mode=OneWay}" Value="FilterPipeline">

                <Setter TargetName="mnuActions" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="btnReturnToView" Property="Visibility" Value="Visible"/>

                <Setter TargetName="SignalViewPane" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="SignalViewSelectorPane" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="FilterPipelinePane" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="SignalViewGroupView" DataType="vm:SignalViewGroupViewModel">
        <Border BorderThickness="0" CornerRadius="3" Padding="6" Margin="4,4,4,12" Background="#FFDEDEDE">
            <DockPanel LastChildFill="True">
                <UniformGrid Columns="2" DockPanel.Dock="Right">
                    <UniformGrid.LayoutTransform>
                        <RotateTransform Angle="90"/>
                    </UniformGrid.LayoutTransform>
                    <Button Content="Add View" Padding="3" Margin="1" Command="{Binding AddViewCommand, Mode=OneTime}"/>
                    <Button Content="Remove Group" Padding="3" Margin="1" Command="{Binding RemoveCommand, Mode=OneTime}"/>
                </UniformGrid>
                <ItemsControl ItemsSource="{Binding Containers, Mode=OneTime}" ItemTemplate="{StaticResource SignalViewContainerView}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid x:Name="grd" Rows="1" Columns="{Binding ContainerCount, Mode=OneWay}"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </DockPanel>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="RootView" DataType="vm:RootViewModel">
        <DockPanel LastChildFill="True">
            <Menu DockPanel.Dock="Top" Background="WhiteSmoke">
                <MenuItem Header="File" Padding="10,6,10,6" Margin="2">
                    <MenuItem Header="New Layout" Command="{Binding NewLayoutCommand, Mode=OneTime}"/>
                    <MenuItem Header="Load Layout..." Command="{Binding LoadLayoutCommand, Mode=OneTime}"/>
                    <MenuItem Header="Save Layout" Command="{Binding SaveLayoutCommand, Mode=OneTime}"/>
                    <MenuItem Header="Save Layout As..." Command="{Binding SaveLayoutAsCommand, Mode=OneTime}"/>
                    <Separator/>
                    <MenuItem Header="Close" Command="{Binding CloseCommand, Mode=OneTime}"/>
                </MenuItem>
                <!--<MenuItem Header="View" Margin="2">
                    <MenuItem Header="Layout orientation">
                        <MenuItem x:Name="mnuVerticalLayout" Header="Vertical" IsChecked="True" Command="{Binding ChangeGlobalLayoutOrientationCommand, Mode=OneTime}" CommandParameter="Vertical"/>
                        <MenuItem x:Name="mnuHorizontalLayout" Header="Horizontal" Command="{Binding ChangeGlobalLayoutOrientationCommand, Mode=OneTime}" CommandParameter="Horizontal"/>
                    </MenuItem>
                </MenuItem>-->
            </Menu>
            <Expander Margin="4" Padding="2" ExpandDirection="Right" IsExpanded="True" Background="WhiteSmoke" VerticalAlignment="Stretch" BorderThickness="0">
                <Expander.Header>
                    <TextBlock Text="Data Sources">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="90"/>
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                </Expander.Header>
                <ScrollViewer HorizontalAlignment="Left" VerticalScrollBarVisibility="Auto">
                    <ItemsControl ItemsSource="{Binding DataSourceViewModels, Mode=OneTime}" ItemTemplate="{StaticResource DataSourceView}"/>
                </ScrollViewer>
            </Expander>
            <DockPanel Margin="0,4,4,4" LastChildFill="True">
                <!--<UniformGrid Columns="2" DockPanel.Dock="Top" HorizontalAlignment="Left" Margin="0,1,0,1">
                    <Button Content="Load Layout" Padding="4" Command="{Binding LoadLayoutCommand, Mode=OneTime}" Margin="0,0,1,0"/>
                    <Button Content="Save Layout" Padding="4" Command="{Binding SaveLayoutCommand, Mode=OneTime}" Margin="0,0,1,0"/>
                </UniformGrid>-->
                <Button DockPanel.Dock="Bottom" Content="Add Group" Padding="4" HorizontalAlignment="Right" Command="{Binding AddGroupCommand, Mode=OneTime}" Margin="1,1,0,1"/>
                <ScrollViewer x:Name="scrollViewer" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Disabled" Background="WhiteSmoke">
                    <ItemsControl ItemsSource="{Binding Groups}" ItemTemplate="{StaticResource SignalViewGroupView}" HorizontalAlignment="Stretch">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="{Binding GlobalLayoutOrientation, Mode=OneWay}"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ScrollViewer>
            </DockPanel>
        </DockPanel>
        <!--<DataTemplate.Triggers>
            <DataTrigger Binding="{Binding GlobalLayoutOrientation, Mode=OneWay}" Value="Horizontal">
                <Setter TargetName="scrollViewer" Property="VerticalScrollBarVisibility" Value="Disabled"/>
                <Setter TargetName="scrollViewer" Property="HorizontalScrollBarVisibility" Value="Visible"/>
                <Setter TargetName="mnuVerticalLayout" Property="IsChecked" Value="False"/>
                <Setter TargetName="mnuHorizontalLayout" Property="IsChecked" Value="True"/>
            </DataTrigger>
        </DataTemplate.Triggers>-->
    </DataTemplate>

</ResourceDictionary>
